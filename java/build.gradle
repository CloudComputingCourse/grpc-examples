plugins {
    id("java")
    id("com.google.protobuf") version "0.9.4"
    id("application")
}

group = "cmu.cc15619"
version = "1.0-SNAPSHOT"

repositories {
    mavenCentral()
}

dependencies {
    testImplementation(platform("org.junit:junit-bom:5.9.1"))
    testImplementation("org.junit.jupiter:junit-jupiter")
    runtimeOnly("io.grpc:grpc-netty-shaded:1.61.0")
    implementation("io.grpc:grpc-protobuf:1.61.0")
    implementation("io.grpc:grpc-stub:1.61.0")
    compileOnly("org.apache.tomcat:annotations-api:6.0.53") // necessary for Java 9+
}

protobuf {
    protoc { artifact = "com.google.protobuf:protoc:3.25.1" }
    plugins {
        grpc { artifact = "io.grpc:protoc-gen-grpc-java:1.61.0" }
    }
    generateProtoTasks {
        all()*.plugins { grpc {} }
    }
}

ext {
    serverMainClass = "cmu.cc15619.RPCServer"
    clientMainClass = "cmu.cc15619.RPCClient"
}

jar {
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}


tasks.test {
    useJUnitPlatform()
}

task runServer(type: Exec) {
    dependsOn build
    group = "Execution"
    description = "Run the main class with ExecTask"
    commandLine "java", "-classpath", sourceSets.main.runtimeClasspath.getAsPath(), serverMainClass
}

task runClient(type: Exec) {
    dependsOn build
    group = "Execution"
    description = "Run the main class with ExecTask"
    commandLine "java", "-classpath", sourceSets.main.runtimeClasspath.getAsPath(), clientMainClass
    standardInput = System.in
}
